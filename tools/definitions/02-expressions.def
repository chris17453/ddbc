
subquery:
 [\(] {whitespace}? {select} {whitespace}?  [\)]

expr: 
#      not {whitespace} {expr}
#  |   !   {whitespace} {expr}
#  |  {boolean_primary} {whitespace} IS ({whitespace} not)? {whitespace} ( {boolean} | {unknown})
    {boolean_primary} 
#  |  ( {expr} {whitespace}  ( or | ([\|] [\|]) | xor | and | && )  {whitespace}  {expr})
  
boolean_primary:
   {predicate} 
   | (
      {boolean_primary} 
      {whitespace}
      ( 
        ( {comparison_operator}  {whitespace} {predicate} )
        |  is   ( {whitespace} not) ?  {whitespace} {null} 
        |  <=>  {whitespace} {predicate} 
        |  {comparison_operator}  {whitespace} (all | any)  {whitespace} {subquery}
      ) 
    )


predicate:
  {bit_expr} 
  (
      ({whitespace} not? {whitespace} in      {whitespace} {subquery})
    | {whitespace} not? {whitespace} in      {whitespace} [\(] {expr}   ( ( {whitespace} [,]    {whitespace} {expr})* )? [\)] 
    | {whitespace} not? {whitespace} between {whitespace} {bit_expr}        {whitespace} and    {whitespace} {predicate} 
    | {whitespace} not? {whitespace} like    {whitespace} {simple_expr}   ( {whitespace} escape {whitespace} {simple_expr} )? 
#    | {whitespace} not? {whitespace} regexp  {whitespace} {bit_expr} 
  )?


bit_expr:
#    {bit_expr} {whitespace}  {operations}  {whitespace} {bit_expr}
#  | {bit_expr} {whitespace}  [+-]          {whitespace} {interval_expr}
  | {simple_expr}

operations: 
    [\|]   
  | [&]   
  | ([<][<])
  | ([>][>])
  | [+]   
  | [-]   
  | [*]   
  | [/]   
  | div   
  | mod   
  | [%]   
  | [\^]   

identifier_expr:
 {identifier} as {identifier}
 
simple_expr:
    {literal} 
  | {identifier}
  | {subquery}
#  | {functions}
#  | {simple_expr} {whitespace}  [\|][\|]  {whitespace} {simple_expr}
#  | [+] {whitespace} {simple_expr}
#  | [-] {whitespace} {simple_expr}
#  | [~] {whitespace} {simple_expr}
#  | [!] {whitespace} {simple_expr}
  |     {identifier_expr}
#  |     {interval_expr}

literal: 
    {hex} 
  | {bit}
  | {boolean} 
  | {null}
  | {string} 
  | {real} 




# where condition must be an expression + [and//or/not/ is not etc]