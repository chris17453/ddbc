
subquery:
 [\(] {select}  [\)]

expr: 
#      not {expr}
#  |   !   {expr}
#  |  {boolean_primary} IS (not)? ( {boolean} | {unknown})
    {boolean_primary}  ( {expr}  ( or | ([\|] [\|]) | xor | and | && )  {expr})
  
boolean_primary:
   {predicate} 
   | (
      {boolean_primary} 
      ( 
        ( {comparison_operator}  {predicate} )
        |  is   ( not) ?  {null} 
        |  <=>  {predicate} 
        |  {comparison_operator}  (all | any)  {subquery}
      ) 
    )


predicate:
  {bit_expr} 
  (
      ( not? in      {subquery})
     |  not? in      [\(] {expr}   ( ( [,]    {expr})* )? [\)] 
     |  not? between {bit_expr}        and    {predicate} 
     |  not? like    {simple_expr}   ( escape {simple_expr} )? 
#    |  not? regexp  {bit_expr} 
  )?


bit_expr:
#    {bit_expr} {operations} {bit_expr}
#  | {bit_expr} [+-]         {interval_expr}
  | {simple_expr}

operations: 
    [\|]   
  | [&]   
  | ([<][<])
  | ([>][>])
  | [+]   
  | [-]   
  | [*]   
  | [/]   
  | div   
  | mod   
  | [%]   
  | [\^]   

identifier_expr:
 {identifier} as {identifier}
 
simple_expr:
    {literal} 
  | {identifier}
#  | {subquery}
#  | {functions}
#  | {simple_expr}  [\|][\|]  {simple_expr}
#  | [+] {simple_expr}
#  | [-] {simple_expr}
#  | [~] {simple_expr}
#  | [!] {simple_expr}
   |     {identifier_expr}
#  |     {interval_expr}

literal: 
    {hex} 
  | {bit}
  | {boolean} 
  | {null}
  | {string} 
  | {real} 



# where condition must be an expression + [and//or/not/ is not etc]