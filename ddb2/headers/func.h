// this holds the string you are tokenizing
typedef struct node_t {
  int len;
  int pos;
  int OK;
  int depth;
  const char *function;
  const char *last_function;
  char *value;
  struct stack_t *stack;
} node_t;
node_t *match_comment(node_t * n, const char *last_method, int depth);
node_t *match_block_comment(node_t * n, const char *last_method, int depth);
node_t *match_single_comment(node_t * n, const char *last_method, int depth);
node_t *match_left_comment(node_t * n, const char *last_method, int depth);
node_t *match_right_comment(node_t * n, const char *last_method, int depth);
node_t *match_inline_comment(node_t * n, const char *last_method, int depth);
node_t *match_select(node_t * n, const char *last_method, int depth);
node_t *match_expr(node_t * n, const char *last_method, int depth);
node_t *match_boolean_primary(node_t * n, const char *last_method, int depth);
node_t *match_where_expression(node_t * n, const char *last_method, int depth);
node_t *match_predicate(node_t * n, const char *last_method, int depth);
node_t *match_bit_expr(node_t * n, const char *last_method, int depth);
node_t *match_operations(node_t * n, const char *last_method, int depth);
node_t *match_complex_expr(node_t * n, const char *last_method, int depth);
node_t *match_simple_expr(node_t * n, const char *last_method, int depth);
node_t *match_literal(node_t * n, const char *last_method, int depth);
node_t *match_unknown(node_t * n, const char *last_method, int depth);
node_t *match_hex(node_t * n, const char *last_method, int depth);
node_t *match_bit(node_t * n, const char *last_method, int depth);
node_t *match_null(node_t * n, const char *last_method, int depth);
node_t *match_true(node_t * n, const char *last_method, int depth);
node_t *match_false(node_t * n, const char *last_method, int depth);
node_t *match_boolean(node_t * n, const char *last_method, int depth);
node_t *match_real(node_t * n, const char *last_method, int depth);
node_t *match_integer(node_t * n, const char *last_method, int depth);
node_t *match_signed_int(node_t * n, const char *last_method, int depth);
node_t *match_unsigned_int(node_t * n, const char *last_method, int depth);
node_t *match_sign(node_t * n, const char *last_method, int depth);
node_t *match_exponent(node_t * n, const char *last_method, int depth);
node_t *match_identifier(node_t * n, const char *last_method, int depth);
node_t *match_alpha(node_t * n, const char *last_method, int depth);
node_t *match_whitespace(node_t * n, const char *last_method, int depth);
node_t *match_single_quote_string(node_t * n, const char *last_method, int depth);
node_t *match_double_quote_string(node_t * n, const char *last_method, int depth);
node_t *match_string(node_t * n, const char *last_method, int depth);
node_t *match_select_expr(node_t * n, const char *last_method, int depth);
node_t *match_end_of_line(node_t * n, const char *last_method, int depth);
node_t *match_comparison_operator(node_t * n, const char *last_method, int depth);
node_t *match_not_whitespace(node_t * n, const char *last_method, int depth);
node_t *match_function(char *data);
